#리펙토링 꼭 해야만 하는가?

* 사실 SI 에서는 리팩토링이라는 개념이 거의 없었다...
    - 왜냐하면 SI(System Integration) -> SM(System Maintenance) 로 넘기고 끝인 경우가 많았기 때문
    - 일부 프레임워크를 만드는 팀은 제외

* IT 서비스에서는 리팩토링이 아주 중요해진 이유는?
    - 서비스 오픈 후 변화의 폭이 크다
        - 절대 바뀌지 않는다는 정책이 바뀜
            - 국내전용 -> 글로벌
            - PC 전용 -> 모바일, 앱도 지원
        - 중간에 추가적인 레이어가 하나씩 더 들어가는 경우 흔함
          A 나라의 온라인 강좌, B 나라의 오프라인 강좌.. 온라인 오프라인 둘만있던것이 온라인에서의 어떤 종류의 온라인,
          어떤 종류의 오프라인 이런식으로 추가가 될수 있다. 처음에는 3개국에서 하던것이 8개국 이런식으로 늘어나면서 정책들이 늘어날 수 가 있다.
        - 기존 구조를 뒤흔드는 기능 추가를 하는 경우가 많다.
          이런 기능을 추가하면 좋겠는데요? 하고 요구하는 경우가 일년에 한 두번씩 있다.
    - 1번의 큰 변화는 프로젝트를 최속 1.5배 이상 복잡하게 만든다
    - 이 복잡성을 줄여주는 것이 바로 리펙토링


* 리팩토링의 주요 포인트
    - 일정에 맞추느라 품질이 다소 떨어졌던 부분
    - 서비스에서 핵심적이면서 사용자 경험에 큰 영향을 끼치는 부분
    - 복잡도가 높고 향후 기능 추가, 변경 가능성이 높은 부분
    - 타 서비스에서도 활용할만한 공통적인 기능
        - 외부 라이브러리나 시스템으로 도출
    - 테스트코드 등도 가능
    - 도전적인 부분
        - 새로운 기술로 성능 향상이나 유지보수성이 향상이 가능한 부분
        - (기존도 나쁘지 않지만) 더 좋은 구성 방법이 생각나는 부분