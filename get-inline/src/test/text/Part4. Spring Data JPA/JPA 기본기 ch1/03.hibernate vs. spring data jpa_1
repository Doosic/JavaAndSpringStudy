* hibernate 와 spring data jpa 차이점이 무엇인가? (Hibernate)

    - 하이버네이트, 스프링 JPA
      둘다 Spring Data JPA 를 사용하면서 볼 수 있는 단어들
        - 정확히 무슨 차이인지 알아보자!

    - Hibernate
      "MORE THAN AN ORM, DISCOVER THE HIBERNATE GALAXY."
        - 자바생태계를 대표하는 ORM framework
        - 스프링 부트에서 채택한 메인 ORM framework
        - JPA 표준 스펙을 구현한 JPA Provider
        - 고성능, 확장성, 안정성을 표방
        - 다양한 하위 제품들로 나뉨
            1.Hibernate ORM
            2.Hibernate Validator
            3.Hibernate Reactive

      - Hibernate Query Language: HQL
        하이버네이트가 사용하는 SQL 스타일 비표준 쿼리언어
            - 객체 모델에 초점을 맞춰 설계됨
            - JPQL 의 바탕이 된다(JPQL 은 HQL 의 subset)
                - JPQL 은 완벽한 HQL 문장이지만, 반대로는 성립하지 않는다.

      - Criteria query
        type-safety 를 제공하는 JPQL 의 대안 표현법이다.

            CriteriaBuilder builder = entityManager.getCriteriaBuilder();

            CriteriaQuery<Person> criteria = builder.createQuery( Person.class ); // 타입을 지정하기 위한 Entity 클래스
            Root<Person> root = criteria.from( Person.class );                    // 어느 테이블에서 볼지
            criteria.select( root );                                                // 뭘 가져올지? root 전체
            criteria.where( builder.equal( root.get( Person_.name ), "John Doe" ) ); // where 절

            List<Person> persons = entityManager.createQuery( criteria ).getResultList(); // 완성된 내용을 넣고 가져온다.

      - Native SQL Query
        특정 DB 에 종속된 SQL 도 사용 가능하다.
            List<Object[]> persons = entityManager.createNativeQuery(
            "SELECT * FROM Person" ).getResultList();


      - Hibernate: 예제 - persistence.xml
        설정 파일은 META-INF/persistence.xml 로 작성한다.

            <persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/
            xml/ns/persistence/persistence_2_0.xsd"
             version="2.0">
             <persistence-unit name="org.hibernate.tutorial.jpa">
             ...
             </persistence-unit>
            </persistence>

      - Hibernate: 예제 - Entity Class
        엔티티 클래스로 객체와 테이블 관계를 정의

            @Entity
            @Table( name = "EVENTS" )
            public class Event {
             @Id
             @GeneratedValue(generator="increment")
             @GenericGenerator(name="increment", strategy = "increment")
             public Long getId() {
             return id;
             }
             ...
             public String getTitle() {
             return title;
             }
             @Temporal(TemporalType.TIMESTAMP)
             @Column(name = "EVENT_DATE")
             public Date getDate() {
             return date;
             }
            }

      - Hibernate: 예제 - logic
        트랜잭션을 열고 커넥션자원을 가져와 쿼리를 사용하여 자원을 가져오고 트랜잭션을 닫아주는 과정들.
        자바코드로만 전부 진행되었다.

            EntityManager entityManager = sessionFactory.createEntityManager();
            entityManager.getTransaction().begin();
            List<Event> result = entityManager.createQuery( "from Event", Event.class ).getResultList();
            for ( Event event : result ) {
            System.out.println( "Event (" + event.getDate() + ") : " + event.getTitle() );
            }
            entityManager.getTransaction().commit();
            entityManager.close();